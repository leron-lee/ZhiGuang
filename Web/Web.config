<?xml version="1.0"?>
<configuration>
  
  
  <appSettings/>
  <connectionStrings>
    <add name="connectionstring" connectionString="Data Source=.;database=test_db;uid=sa;pwd=123456" providerName="System.Data.SqlClient"/>
    <!--<add name="connectionstring" connectionString="Data Source=qds155042610.my3w.com;database=qds155042610_db;uid=qds155042610;pwd=admin123" providerName="System.Data.SqlClient"/>-->
    <!--<add name="connectionstring" connectionString="Data Source=.;Initial Catalog=WX_SHOP2;Trusted_Connection=SSPI;Persist Security Info=True;Max Pool Size = 20;Pooling = True;" providerName="System.Data.SqlClient" />-->
  </connectionStrings>
  <system.web>
    <httpRuntime requestValidationMode="2.0" executionTimeout="500" maxRequestLength="20480000" useFullyQualifiedRedirectUrl="false" minFreeThreads="8" minLocalRequestFreeThreads="4" appRequestQueueLimit="100"/>
    <httpModules>
     
    </httpModules>

    <!-- 
            设置 compilation debug="true" 可将调试符号插入
            已编译的页面中。但由于这会 
            影响性能，因此只在开发过程中将此值 
            设置为 true。
        -->
    <compilation debug="true" targetFramework="4.0">
      <buildProviders>
        <add extension=".html" type="System.Web.Compilation.PageBuildProvider"/>
      </buildProviders>
    </compilation>
    <!--
            通过 <authentication> 节可以配置 ASP.NET 用来 
            识别进入用户的
            安全身份验证模式。 
        -->
    <authentication mode="Windows"/>
    <!--
            如果在执行请求的过程中出现未处理的错误，
            则通过 <customErrors> 节可以配置相应的处理步骤。具体说来，
            开发人员通过该节可以配置
            要显示的 html 错误页
            以代替错误堆栈跟踪。

        <customErrors mode="RemoteOnly" defaultRedirect="GenericErrorPage.htm">
            <error statusCode="403" redirect="NoAccess.htm" />
            <error statusCode="404" redirect="FileNotFound.htm" />
        </customErrors>
        -->
    <customErrors mode="Off"/>
    <httpHandlers>
      <add path="*.html" verb="*" type="System.Web.UI.PageHandlerFactory" validate="True"/>
    </httpHandlers>
   
    <pages validateRequest="false" controlRenderingCompatibilityVersion="3.5" clientIDMode="AutoID"/>
  </system.web>
  <!-- 
        在 Internet 信息服务 7.0 下运行 ASP.NET AJAX 需要 system.webServer
        节。对早期版本的 IIS 来说则不需要此节。
    -->
  <system.webServer>

    <security>
      <requestFiltering>
        　　　<requestLimits maxAllowedContentLength="2147483648"/>
      </requestFiltering>
    </security>
    <validation validateIntegratedModeConfiguration="false"/>
    <modules>
    
    </modules>
    <handlers>
      <add name="Html-Integrate" path="*.html" verb="*" type="System.Web.UI.PageHandlerFactory" resourceType="Unspecified" preCondition="integratedMode"/>
      <add name="all" path="*" verb="*" modules="IsapiModule" scriptProcessor="C:\Windows\Microsoft.NET\Framework\v2.0.50727\aspnet_isapi.dll" resourceType="Unspecified" requireAccess="None" preCondition="classicMode,runtimeVersionv2.0,bitness32"/>
      <add name="htmlrequest" path="*.html" verb="GET,HEAD,POST,DEBUG" modules="IsapiModule" scriptProcessor="%windir%\Microsoft.NET\Framework\v2.0.50727\aspnet_isapi.dll" resourceType="Unspecified" preCondition="classicMode,runtimeVersionv2.0,bitness32"/>
    </handlers>
    
  </system.webServer>
</configuration>